name: CI - Run Tests with Docker

on:
  push:
    branches:
      - desenvolvimento
  pull_request:
    branches:
      - desenvolvimento

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Clonar o repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      # Passo 3: Instalar Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Passo 4: Criar a rede swag_default manualmente (se não existir)
      - name: Create swag_default network
        run: |
          docker network create swag_default || echo "Network swag_default already exists"

      # Passo 5: Derrubar containers anteriores (evita erro de porta)
      - name: Clean up previous containers
        run: docker-compose down --remove-orphans

      # Passo 6: Subir os containers com Docker Compose (com build)
      - name: Run Docker Compose
        run: |
          docker-compose up -d --build
          docker-compose ps

      # Passo 7: Testes do Backend (FastAPI) -- necessário fazer a criação do arquivo de teste na pasta backend
      # - name: Run backend tests (FastAPI)
      #  run: docker-compose run --rm backend pytest backend/tests/

      # Passo 8: Testes do Frontend (React/Vite) -- alinhar com o frontend os testes que devem ser feitos
      # - name: Run frontend tests (React/Vite)
      #  run: docker-compose run --rm frontend npm test -- --coverage

      # Passo 9: Encerrar os containers
      - name: Shut down Docker containers
        run: docker-compose down

name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3


      - name: Configurar chave SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.MAMALOOPORTAL_GIT }}

      - name: Deploy via SSH
        run: |
          ssh ${{ secrets.USER_SERVIDOR }}@${{ secrets.IP_SERVIDOR }} << 'EOF'
            set -e

            echo "Conectado ao servidor"
            cd /home/mamalooportal/Portal-Mamaloo

            echo "Atualizando código do repositório"
            git fetch origin main
            git checkout main
            git pull origin main

            echo "Reiniciando containers Docker"
            docker-compose -f docker-compose.yml --env-file .env down --remove-orphans
            docker-compose -f docker-compose.yml --env-file .env up -d

            echo "✅ Deploy concluído com sucesso!"
          EOF



