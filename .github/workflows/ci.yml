name: CI - Run Tests with Docker

on:
  push:
    branches:
      - desenvolvimento
  pull_request:
    branches:
      - desenvolvimento

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Clonar o reposit√≥rio
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      # Passo 3: Instalar Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Passo 4: Derrubar containers anteriores (evita erro de porta)
      - name: Clean up previous containers
        run: docker-compose down --remove-orphans

      # Passo 5: Subir os containers com Docker Compose
      - name: Run Docker Compose
        run: |
          docker-compose up -d --build
          docker-compose ps

      # Passo 6: Testes do Backend (FastAPI)
      - name: Run backend tests (FastAPI)
        run: docker-compose run --rm backend pytest backend/tests/

      # Passo 7: Testes do Frontend (React/Vite)
      - name: Run frontend tests (React/Vite)
        run: docker-compose run --rm frontend npm test -- --coverage

      # Passo 8: Encerrar os containers
      - name: Shut down Docker containers
        run: docker-compose down

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Request approval before deploying
        uses: peter-evans/manual-approval-action@v1
        with:
          approval_required: true

      - name: Deploy to Server
        run: |
          curl -X POST "https://seu-servidor.com/deploy?key=${{ secrets.DEPLOY_API_KEY }}"
        env:
          DEPLOY_API_KEY: ${{ secrets.DEPLOY_API_KEY }}
